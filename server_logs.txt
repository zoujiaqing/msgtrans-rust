warning: `/Users/zoujiaqing/.cargo/config` is deprecated in favor of `config.toml`
note: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`
warning: `/Users/zoujiaqing/.cargo/config` is deprecated in favor of `config.toml`
note: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`
warning: unused imports: `ActorManager`, `BufferSize`, `MemoryPoolEvent`, `OptimizedMemoryStatsSnapshot`, `PacketId`, `error::CloseReason`, and `expert_config::ExpertConfig`
  --> src/transport/api.rs:14:16
   |
14 |     SessionId, PacketId, TransportError, Packet, TransportEvent, EventStream,
   |                ^^^^^^^^
15 |     error::CloseReason,
   |     ^^^^^^^^^^^^^^^^^^
...
20 |         actor_v2::{ActorManager, OptimizedActor},
   |                    ^^^^^^^^^^^^
...
23 |         memory_pool_v2::{OptimizedMemoryPool, OptimizedMemoryStatsSnapshot, MemoryPoolEvent, BufferSize},
   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^  ^^^^^^^^^^
24 |         expert_config::ExpertConfig,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `LockFreeCounter`
  --> src/transport/pool.rs:25:75
   |
25 | use crate::transport::lockfree_enhanced::{LockFreeHashMap, LockFreeQueue, LockFreeCounter};
   |                                                                           ^^^^^^^^^^^^^^^

warning: unused imports: `BufferSize` and `MemoryPoolEvent`
  --> src/transport/pool.rs:27:91
   |
27 | use crate::transport::memory_pool_v2::{OptimizedMemoryPool, OptimizedMemoryStatsSnapshot, MemoryPoolEvent, BufferSize};
   |                                                                                           ^^^^^^^^^^^^^^^  ^^^^^^^^^^

warning: unused import: `ProtocolConfig`
  --> src/transport/server.rs:16:16
   |
16 |     protocol::{ProtocolConfig, adapter::ServerConfig, protocol::Server},
   |                ^^^^^^^^^^^^^^

warning: unused doc comment
   --> src/transport/server.rs:251:13
    |
251 |             /// ✅ Phase 1: LockFree 会话管理
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
252 |             sessions: Arc::new(LockFreeHashMap::new()),
    |             ------------------------------------------ rustdoc does not generate documentation for expression fields
    |
    = help: use `//` for a plain comment
    = note: `#[warn(unused_doc_comments)]` on by default

warning: unused doc comment
   --> src/transport/server.rs:254:13
    |
254 |             /// 🔧 Phase 1: Crossbeam 同步控制
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
255 |             control_tx,
    |             ---------- rustdoc does not generate documentation for expression fields
    |
    = help: use `//` for a plain comment

warning: unused doc comment
   --> src/transport/server.rs:258:13
    |
258 |             /// 🎯 统一会话管理器
    |             ^^^^^^^^^^^^^^^^^^^^^
259 |             session_manager,
    |             --------------- rustdoc does not generate documentation for expression fields
    |
    = help: use `//` for a plain comment

warning: unused imports: `Guard` and `Shared`
  --> src/transport/lockfree_enhanced.rs:14:45
   |
14 | use crossbeam::epoch::{self, Atomic, Owned, Shared, Guard};
   |                                             ^^^^^^  ^^^^^

warning: unused import: `parking_lot::RwLock`
  --> src/transport/lockfree_enhanced.rs:17:5
   |
17 | use parking_lot::RwLock;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `SessionId`
  --> src/transport/lockfree_enhanced.rs:19:13
   |
19 | use crate::{SessionId, error::TransportError};
   |             ^^^^^^^^^

warning: unused import: `tokio::time::timeout`
  --> src/transport/protocol_adapter_v2.rs:13:5
   |
13 | use tokio::time::timeout;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ConnectionState`, `PacketType`, and `ProtocolType`
  --> src/adapters/websocket.rs:15:31
   |
15 |     command::{ConnectionInfo, ProtocolType, ConnectionState},
   |                               ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^
16 |     error::TransportError,
17 |     packet::{Packet, PacketType},
   |                      ^^^^^^^^^^

warning: unexpected `cfg` condition value: `examples`
   --> src/adapters/quic.rs:479:17
    |
479 | #[cfg(any(test, feature = "examples"))]
    |                 ^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `default`, `flate2`, `quic`, `tcp`, `websocket`, and `zstd`
    = help: consider adding `examples` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unused imports: `Incoming`, `RecvStream`, and `SendStream`
 --> src/adapters/quic.rs:3:55
  |
3 |     Endpoint, ServerConfig, ClientConfig, Connection, RecvStream, SendStream,
  |                                                       ^^^^^^^^^^  ^^^^^^^^^^
4 |     ConnectError, ConnectionError, ReadError, WriteError, ClosedStream, ReadToEndError,
5 |     Incoming,
  |     ^^^^^^^^

warning: unused imports: `PrivateKeyDer` and `RootCertStore`
 --> src/adapters/quic.rs:8:33
  |
8 |     pki_types::{CertificateDer, PrivateKeyDer, PrivatePkcs8KeyDer, ServerName},
  |                                 ^^^^^^^^^^^^^
9 |     RootCertStore,
  |     ^^^^^^^^^^^^^

warning: unused import: `tokio::sync::Mutex`
  --> src/adapters/quic.rs:14:5
   |
14 | use tokio::sync::Mutex;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused imports: `quic` and `websocket`
  --> src/adapters/factories.rs:13:18
   |
13 | use super::{tcp, websocket, quic};
   |                  ^^^^^^^^^  ^^^^

warning: unused import: `crate::error::TransportError`
 --> src/protocol/client_config.rs:7:5
  |
7 | use crate::error::TransportError;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variable does not need to be mutable
   --> src/transport/pool.rs:259:34
    |
259 |     pub async fn initialize_pool(mut self) -> Result<Self, TransportError> {
    |                                  ----^^^^
    |                                  |
    |                                  help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> src/transport/actor_v2.rs:197:36
    |
197 |     pub async fn run_dual_pipeline(mut self) -> Result<(), TransportError> 
    |                                    ----^^^^
    |                                    |
    |                                    help: remove this `mut`

warning: unused variable: `session_id`
   --> src/transport/server.rs:612:33
    |
612 |         self.sessions.for_each(|session_id, transport| {
    |                                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_session_id`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `transport`
   --> src/transport/server.rs:612:45
    |
612 |         self.sessions.for_each(|session_id, transport| {
    |                                             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_transport`

warning: unused import: `futures::StreamExt`
  --> src/transport/api.rs:27:5
   |
27 | use futures::StreamExt;
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `ProtocolConfig`
  --> src/transport/api.rs:17:33
   |
17 |     protocol::{ProtocolAdapter, ProtocolConfig, ProtocolRegistry, Connection, ProtocolConnectionAdapter, adapter::Se...
   |                                 ^^^^^^^^^^^^^^

warning: unused import: `adapter::ServerConfig`
  --> src/transport/server.rs:16:32
   |
16 |     protocol::{ProtocolConfig, adapter::ServerConfig, protocol::Server},
   |                                ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `AsyncWriteExt`
  --> src/adapters/quic.rs:15:31
   |
15 | use tokio::io::{AsyncReadExt, AsyncWriteExt};
   |                               ^^^^^^^^^^^^^

warning: unused import: `AsyncReadExt`
  --> src/adapters/quic.rs:15:17
   |
15 | use tokio::io::{AsyncReadExt, AsyncWriteExt};
   |                 ^^^^^^^^^^^^

warning: unused variable: `error`
   --> src/error.rs:202:13
    |
202 |     fn from(error: String) -> Self {
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_error`

warning: unused variable: `adapter`
   --> src/connection.rs:153:13
    |
153 |         let adapter = self.inner.accept().await.map_err(|e| {
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_adapter`

warning: type `WebSocketServer<WebSocketServerConfig>` is more private than the item `ServerHandle::WebSocket::0`
   --> src/transport/api.rs:765:15
    |
765 |     WebSocket(crate::adapters::websocket::WebSocketServer<crate::protocol::WebSocketServerConfig>),
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ServerHandle::WebSocket::0` is reachable at visibility `pub`
    |
note: but type `WebSocketServer<WebSocketServerConfig>` is only usable at visibility `pub(crate)`
   --> src/adapters/websocket.rs:227:1
    |
227 | pub(crate) struct WebSocketServer<C> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = note: `#[warn(private_interfaces)]` on by default

warning: type `QuicServer` is more private than the item `ServerHandle::Quic::0`
   --> src/transport/api.rs:767:10
    |
767 |     Quic(crate::adapters::quic::QuicServer),
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ field `ServerHandle::Quic::0` is reachable at visibility `pub`
    |
note: but type `QuicServer` is only usable at visibility `pub(crate)`
   --> src/adapters/quic.rs:449:1
    |
449 | pub(crate) struct QuicServer {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type `adapters::tcp::TcpServer` is more private than the item `TcpServerWrapper::new`
   --> src/adapters/factories.rs:119:5
    |
119 |     pub fn new(server: tcp::TcpServer) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ associated function `TcpServerWrapper::new` is reachable at visibility `pub`
    |
note: but type `adapters::tcp::TcpServer` is only usable at visibility `pub(crate)`
   --> src/adapters/tcp.rs:437:1
    |
437 | pub(crate) struct TcpServer {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type `WebSocketServer<WebSocketServerConfig>` is more private than the item `WebSocketServerWrapper::new`
   --> src/adapters/factories.rs:292:5
    |
292 |     pub fn new(server: crate::adapters::websocket::WebSocketServer<crate::protocol::WebSocketServerConfig>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ associated function `WebSocketServerWrapper::new` is reachable at visibility `pub`
    |
note: but type `WebSocketServer<WebSocketServerConfig>` is only usable at visibility `pub(crate)`
   --> src/adapters/websocket.rs:227:1
    |
227 | pub(crate) struct WebSocketServer<C> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type `QuicServer` is more private than the item `QuicServerWrapper::new`
   --> src/adapters/factories.rs:463:5
    |
463 |     pub fn new(server: crate::adapters::quic::QuicServer) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ associated function `QuicServerWrapper::new` is reachable at visibility `pub`
    |
note: but type `QuicServer` is only usable at visibility `pub(crate)`
   --> src/adapters/quic.rs:449:1
    |
449 | pub(crate) struct QuicServer {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type `adapters::tcp::TcpServer` is more private than the item `connection::TcpServer::new`
   --> src/connection.rs:143:5
    |
143 |     pub fn new(inner: crate::adapters::tcp::TcpServer) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ associated function `connection::TcpServer::new` is reachable at visibility `pub`
    |
note: but type `adapters::tcp::TcpServer` is only usable at visibility `pub(crate)`
   --> src/adapters/tcp.rs:437:1
    |
437 | pub(crate) struct TcpServer {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `add_protocol_connection` and `add_protocol_server` are never used
   --> src/transport/api.rs:349:14
    |
76  | impl Transport {
    | -------------- methods in this implementation
...
349 |     async fn add_protocol_connection(&self, mut connection: Box<dyn Connection>) -> Result<SessionId, TransportErro...
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
359 |     async fn add_protocol_server(&self, mut server: Box<dyn crate::protocol::Server>) -> Result<SessionId, Transpor...
    |              ^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: associated function `new` is never used
   --> src/transport/pool.rs:635:8
    |
634 | impl PoolStats {
    | -------------- associated function in this implementation
635 |     fn new() -> Self {
    |        ^^^

warning: fields `timestamp`, `from_size`, `to_size`, and `factor` are never read
   --> src/transport/pool.rs:668:5
    |
667 | struct ExpansionEvent {
    |        -------------- fields in this struct
668 |     timestamp: Instant,
    |     ^^^^^^^^^
669 |     from_size: usize,
    |     ^^^^^^^^^
670 |     to_size: usize,
    |     ^^^^^^^
671 |     factor: f64,
    |     ^^^^^^
    |
    = note: `ExpansionEvent` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `timestamp`, `from_size`, `to_size`, and `factor` are never read
   --> src/transport/pool.rs:677:5
    |
676 | struct ShrinkEvent {
    |        ----------- fields in this struct
677 |     timestamp: Instant,
    |     ^^^^^^^^^
678 |     from_size: usize,
    |     ^^^^^^^^^
679 |     to_size: usize,
    |     ^^^^^^^
680 |     factor: f64,
    |     ^^^^^^
    |
    = note: `ShrinkEvent` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: method `update_metrics` is never used
   --> src/transport/pool.rs:748:14
    |
692 | impl PerformanceMonitor {
    | ----------------------- method in this implementation
...
748 |     async fn update_metrics(&self) {
    |              ^^^^^^^^^^^^^^

warning: fields `pool_config`, `load_balancer`, and `circuit_breaker` are never read
   --> src/transport/client.rs:235:5
    |
233 | pub struct ClientTransport {
    |            --------------- fields in this struct
234 |     inner: Transport,
235 |     pool_config: ConnectionPoolConfig,
    |     ^^^^^^^^^^^
236 |     retry_config: RetryConfig,
237 |     load_balancer: Option<LoadBalancerConfig>,
    |     ^^^^^^^^^^^^^
238 |     circuit_breaker: Option<CircuitBreakerConfig>,
    |     ^^^^^^^^^^^^^^^

warning: variants `AddSession`, `RemoveSession`, and `Shutdown` are never constructed
   --> src/transport/server.rs:194:5
    |
193 | enum ServerControlCommand {
    |      -------------------- variants in this enum
194 |     AddSession(SessionId, Transport),
    |     ^^^^^^^^^^
195 |     RemoveSession(SessionId),
    |     ^^^^^^^^^^^^^
196 |     Shutdown,
    |     ^^^^^^^^
    |
    = note: `ServerControlCommand` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `control_rx` and `middleware_stack` are never read
   --> src/transport/server.rs:208:5
    |
202 | pub struct ServerTransport {
    |            --------------- fields in this struct
...
208 |     control_rx: Option<CrossbeamReceiver<ServerControlCommand>>,
    |     ^^^^^^^^^^
...
219 |     middleware_stack: Vec<Box<dyn ServerMiddleware>>,
    |     ^^^^^^^^^^^^^^^^

warning: field `stats` is never read
   --> src/transport/actor_v2.rs:538:5
    |
535 | pub struct ActorManager {
    |            ------------ field in this struct
...
538 |     stats: Arc<LockFreeActorStats>,
    |     ^^^^^

warning: associated function `builder` is never used
   --> src/adapters/tcp.rs:443:19
    |
442 | impl TcpServer {
    | -------------- associated function in this implementation
443 |     pub(crate) fn builder() -> TcpServerBuilder {
    |                   ^^^^^^^

warning: field `config` is never read
  --> src/adapters/websocket.rs:51:5
   |
50 | pub struct WebSocketAdapter<C> {
   |            ---------------- field in this struct
51 |     config: C,
   |     ^^^^^^

warning: field `config` is never read
   --> src/adapters/quic.rs:169:5
    |
167 | pub struct QuicAdapter<C> {
    |            ----------- field in this struct
168 |     session_id: SessionId,
169 |     config: C,
    |     ^^^^^^

warning: unused `std::result::Result` that must be used
    --> src/transport/api.rs:1055:9
     |
1055 | /         self.sessions.for_each(|session_id, _| {
1056 | |             sessions.push(*session_id);
1057 | |         });
     | |__________^
     |
     = note: this `Result` may be an `Err` variant, which should be handled
     = note: `#[warn(unused_must_use)]` on by default
help: use `let _ = ...` to ignore the resulting value
     |
1055 |         let _ = self.sessions.for_each(|session_id, _| {
     |         +++++++

warning: `msgtrans` (lib) generated 48 warnings (run `cargo fix --lib -p msgtrans` to apply 16 suggestions)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.33s
     Running `target/debug/examples/echo_server_new_api`
🎯 Echo服务器 - 新API设计演示
=============================
📋 使用模式A：先定义事件处理，后启动服务器

[2m2025-06-10T22:15:10.883624Z[0m [34mDEBUG[0m [2mmsgtrans::transport::api[0m[2m:[0m 🌟 SimplifiedSessionManager 创建 - 事件总线已激活
[2m2025-06-10T22:15:10.883669Z[0m [34mDEBUG[0m [2mmsgtrans::transport::api[0m[2m:[0m    📡 广播频道容量: 10000
[2m2025-06-10T22:15:10.883674Z[0m [34mDEBUG[0m [2mmsgtrans::transport::api[0m[2m:[0m    🔄 保活接收器已就位
✅ TCP服务器创建完成: 127.0.0.1:8001
📡 事件流创建完成 - 服务器尚未启动
🚀 事件处理任务已启动
🌐 现在启动服务器...

🎯 测试方法:
   在另一个终端运行: cargo run --example echo_client_tcp_new
   或使用: telnet 127.0.0.1 8001

[2m2025-06-10T22:15:10.884554Z[0m [32m INFO[0m [2mmsgtrans::transport::server[0m[2m:[0m 🌟 启动 1 个协议服务器
[2m2025-06-10T22:15:10.884589Z[0m [32m INFO[0m [2mmsgtrans::transport::server[0m[2m:[0m 📡 启动 tcp 协议服务器
[2m2025-06-10T22:15:10.885092Z[0m [34mDEBUG[0m [2mmsgtrans::adapters::tcp[0m[2m:[0m 🚀 TCP服务器启动在: 127.0.0.1:8001
🎧 开始监听事件...
[2m2025-06-10T22:15:10.885234Z[0m [32m INFO[0m [2mmsgtrans::adapters::tcp[0m[2m:[0m ✅ TCP服务器成功启动在: 127.0.0.1:8001
[2m2025-06-10T22:15:10.885394Z[0m [32m INFO[0m [2mmsgtrans::transport::server[0m[2m:[0m ✅ TCP 服务器启动成功: 127.0.0.1:8001
[2m2025-06-10T22:15:10.885403Z[0m [32m INFO[0m [2mmsgtrans::transport::server[0m[2m:[0m 🎯 所有协议服务器启动完成，等待连接...
[2m2025-06-10T22:15:10.885564Z[0m [32m INFO[0m [2mmsgtrans::transport::server[0m[2m:[0m 🌐 TCP 服务器监听: 127.0.0.1:8001
[2m2025-06-10T22:15:19.329509Z[0m [34mDEBUG[0m [2mmsgtrans::adapters::tcp[0m[2m:[0m 🔗 TCP新连接来自: 127.0.0.1:63868
[2m2025-06-10T22:15:19.330165Z[0m [32m INFO[0m [2mmsgtrans::transport::server[0m[2m:[0m ✅ TCP 新连接接受 (会话ID: session-1)
[2m2025-06-10T22:15:19.330312Z[0m [34mDEBUG[0m [2mmsgtrans::transport::server[0m[2m:[0m 🔧 为连接创建 Transport 实例并集成连接 (服务器会话ID: session-1)
[2m2025-06-10T22:15:19.331526Z[0m [34mDEBUG[0m [2mmsgtrans::transport::api[0m[2m:[0m 🌟 SimplifiedSessionManager 创建 - 事件总线已激活
[2m2025-06-10T22:15:19.331535Z[0m [34mDEBUG[0m [2mmsgtrans::transport::api[0m[2m:[0m    📡 广播频道容量: 10000
[2m2025-06-10T22:15:19.331540Z[0m [34mDEBUG[0m [2mmsgtrans::transport::api[0m[2m:[0m    🔄 保活接收器已就位
[2m2025-06-10T22:15:19.332621Z[0m [32m INFO[0m [2mmsgtrans::protocol::protocol[0m[2m:[0m Registered protocol: tcp
[2m2025-06-10T22:15:19.332652Z[0m [32m INFO[0m [2mmsgtrans::protocol::protocol[0m[2m:[0m Registered protocol: websocket
[2m2025-06-10T22:15:19.332662Z[0m [32m INFO[0m [2mmsgtrans::protocol::protocol[0m[2m:[0m Registered protocol: quic
[2m2025-06-10T22:15:19.333878Z[0m [32m INFO[0m [2mmsgtrans::transport::pool[0m[2m:[0m 🚀 Phase 3: 连接池初始化完成，创建了 100 个连接
[2m2025-06-10T22:15:19.333916Z[0m [32m INFO[0m [2mmsgtrans::transport::api[0m[2m:[0m 🚀 Transport 创建 (Expert Config):
[2m2025-06-10T22:15:19.333922Z[0m [32m INFO[0m [2mmsgtrans::transport::api[0m[2m:[0m    ✅ 连接池 (初始: 100, 最大: 2000)
[2m2025-06-10T22:15:19.333926Z[0m [32m INFO[0m [2mmsgtrans::transport::api[0m[2m:[0m    ✅ 优化内存池 (缓存: 1000)
[2m2025-06-10T22:15:19.333930Z[0m [32m INFO[0m [2mmsgtrans::transport::api[0m[2m:[0m    ✅ 详细监控: true
[2m2025-06-10T22:15:19.334350Z[0m [32m INFO[0m [2mmsgtrans::transport::api[0m[2m:[0m ✅ 成功添加会话 (会话: session-1)
[2m2025-06-10T22:15:19.334377Z[0m [32m INFO[0m [2mmsgtrans::transport::api[0m[2m:[0m ✅ 成功添加 OptimizedActor 连接 (会话: session-1)
[2m2025-06-10T22:15:19.334401Z[0m [34mDEBUG[0m [2mmsgtrans::transport::server[0m[2m:[0m ✅ 连接已成功集成到 Transport (服务器会话ID: session-1, 内部会话ID: session-1)
[2m2025-06-10T22:15:19.334430Z[0m [32m INFO[0m [2mmsgtrans::transport::server[0m[2m:[0m 🎯 会话已注册 (会话ID: session-1)
[2m2025-06-10T22:15:19.334436Z[0m [32m INFO[0m [2mmsgtrans::transport::server[0m[2m:[0m ✅ 连接处理完成 (会话ID: session-1)
[2m2025-06-10T22:15:19.334549Z[0m [32m INFO[0m [2mmsgtrans::transport::api[0m[2m:[0m 🚀 启动 OptimizedActor (会话: session-1)
[2m2025-06-10T22:15:19.334585Z[0m [32m INFO[0m [2mmsgtrans::transport::actor_v2[0m[2m:[0m 🚀 启动优化Actor双管道处理 (会话: session-1)
[2m2025-06-10T22:15:19.335043Z[0m [32m INFO[0m [2mmsgtrans::transport::actor_v2[0m[2m:[0m 📦 启动数据处理管道 (最大批次: 32)
[2m2025-06-10T22:15:19.335059Z[0m [32m INFO[0m [2mmsgtrans::transport::actor_v2[0m[2m:[0m 📥 启动接收处理管道
[2m2025-06-10T22:15:19.335071Z[0m [34mDEBUG[0m [2mmsgtrans::protocol::protocol_adapter[0m[2m:[0m 🔍 ProtocolConnectionAdapter::receive - 开始接收数据...
[2m2025-06-10T22:15:19.335077Z[0m [34mDEBUG[0m [2mmsgtrans::protocol::protocol_adapter[0m[2m:[0m 🔍 连接状态检查: is_connected = true
[2m2025-06-10T22:15:19.335162Z[0m [34mDEBUG[0m [2mmsgtrans::adapters::tcp[0m[2m:[0m 🔍 TCP read_packet - 开始尝试读取数据包
[2m2025-06-10T22:15:19.335191Z[0m [32m INFO[0m [2mmsgtrans::transport::actor_v2[0m[2m:[0m 🎛️ 启动命令适配器 (会话: session-1)
[2m2025-06-10T22:15:19.335235Z[0m [32m INFO[0m [2mmsgtrans::transport::actor_v2[0m[2m:[0m 🎛️ 启动命令处理管道
[2m2025-06-10T22:15:19.335286Z[0m [34mDEBUG[0m [2mmsgtrans::adapters::tcp[0m[2m:[0m 🔍 当前无数据可读，进入阻塞读取模式
[2m2025-06-10T22:15:19.335294Z[0m [34mDEBUG[0m [2mmsgtrans::adapters::tcp[0m[2m:[0m 🔍 开始读取9字节包头...
[2m2025-06-10T22:15:40.340235Z[0m [34mDEBUG[0m [2mmsgtrans::adapters::tcp[0m[2m:[0m 🔍 TCP连接正常关闭 (EOF)
[2m2025-06-10T22:15:40.340263Z[0m [34mDEBUG[0m [2mmsgtrans::protocol::protocol_adapter[0m[2m:[0m 🔍 ProtocolConnectionAdapter::receive - 连接关闭
[2m2025-06-10T22:15:40.340271Z[0m [34mDEBUG[0m [2mmsgtrans::transport::actor_v2[0m[2m:[0m 📥 连接已关闭，无更多数据
[2m2025-06-10T22:15:40.340275Z[0m [32m INFO[0m [2mmsgtrans::transport::actor_v2[0m[2m:[0m 📥 接收处理管道退出
